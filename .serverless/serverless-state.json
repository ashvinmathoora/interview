{
  "service": {
    "service": "helloWorld",
    "serviceObject": {
      "name": "helloWorld"
    },
    "provider": {
      "stage": "stage",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*?]+?)}",
      "name": "aws",
      "runtime": "nodejs10.x",
      "region": "eu-west-1",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "HelloWorldLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/helloWorld"
            }
          },
          "HelloWorldLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/helloWorld/stage/1583410454886-2020-03-05T12:14:14.886Z/helloWorld.zip"
              },
              "FunctionName": "helloWorld",
              "Handler": "handler.hello",
              "MemorySize": 256,
              "Role": {
                "Fn::GetAtt": [
                  "InterviewLambdaASMRole",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 6,
              "Tags": [
                {
                  "Key": "foo",
                  "Value": "bar"
                }
              ],
              "Environment": {
                "Variables": {
                  "environment": "dev",
                  "interviewee": "Ashvin Mathoora",
                  "stage": "stage",
                  "S3BucketName": "interview-bucket-asm",
                  "DestFile": "hello.txt"
                }
              }
            },
            "DependsOn": [
              "HelloWorldLogGroup",
              "InterviewLambdaASMRole"
            ]
          },
          "HelloWorldLambdaVersionBmVZWAyYZjpL1ct34RWotUcSbDCatlk48V30auDF8A0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HelloWorldLambdaFunction"
              },
              "CodeSha256": "RoYP/SUC+JdBi/3RwrymDcUqOXq3IkhODt1fe0eMdgA="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "stage-helloWorld",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceHello": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "hello",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodHelloGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHello"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HelloWorldLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1583410451730": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "stage"
            },
            "DependsOn": [
              "ApiGatewayMethodHelloGet"
            ]
          },
          "HelloWorldLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HelloWorldLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "InterviewLambdaASMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "InterviewLambdaASMRole",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Path": "/",
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            }
          },
          "InterviewLambdaASMRolePolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
              "PolicyName": "InterviewLambdaASMRolePolicy",
              "Roles": [
                {
                  "Ref": "InterviewLambdaASMRole"
                }
              ],
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Resource": [
                      "arn:aws:s3:::interview-bucket-asm",
                      "arn:aws:s3:::interview-bucket-asm/*"
                    ],
                    "Effect": "Allow",
                    "Action": [
                      "s3:Get*",
                      "s3:List*",
                      "s3:Put*"
                    ]
                  }
                ]
              }
            }
          },
          "S3BucketToWriteTo": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "interview-bucket-asm",
              "PublicAccessBlockConfiguration": {
                "BlockPublicAcls": true,
                "BlockPublicPolicy": true,
                "IgnorePublicAcls": true,
                "RestrictPublicBuckets": true
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "HelloWorldLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HelloWorldLambdaVersionBmVZWAyYZjpL1ct34RWotUcSbDCatlk48V30auDF8A0"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/stage"
                ]
              ]
            }
          },
          "BucketName": {
            "Description": "S3 Bucket Created to Output text file",
            "Value": {
              "Ref": "S3BucketToWriteTo"
            }
          },
          "InterviewLambdaASMRoleArn": {
            "Description": "",
            "Value": {
              "Fn::GetAtt": [
                "InterviewLambdaASMRole",
                "Arn"
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "helloWorld": {
        "handler": "handler.hello",
        "name": "helloWorld",
        "events": [
          {
            "http": {
              "path": "hello",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "memorySize": 256,
        "role": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"HelloWorldLambdaFunction\"][\"Properties\"][\"Role\"]"
        },
        "runtime": "nodejs10.x",
        "environment": {
          "environment": "dev",
          "interviewee": "Ashvin Mathoora",
          "stage": "stage",
          "S3BucketName": "interview-bucket-asm",
          "DestFile": "hello.txt"
        },
        "tags": {
          "foo": "bar"
        },
        "package": {},
        "memory": 256,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "HelloWorldLambdaVersionBmVZWAyYZjpL1ct34RWotUcSbDCatlk48V30auDF8A0"
      }
    },
    "resources": {
      "Resources": {
        "InterviewLambdaASMRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "InterviewLambdaASMRole",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Path": "/",
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            ]
          }
        },
        "InterviewLambdaASMRolePolicy": {
          "Type": "AWS::IAM::Policy",
          "Properties": {
            "PolicyName": "InterviewLambdaASMRolePolicy",
            "Roles": [
              {
                "Ref": "InterviewLambdaASMRole"
              }
            ],
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Resource": [
                    "arn:aws:s3:::interview-bucket-asm",
                    "arn:aws:s3:::interview-bucket-asm/*"
                  ],
                  "Effect": "Allow",
                  "Action": [
                    "s3:Get*",
                    "s3:List*",
                    "s3:Put*"
                  ]
                }
              ]
            }
          }
        },
        "S3BucketToWriteTo": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "interview-bucket-asm",
            "PublicAccessBlockConfiguration": {
              "BlockPublicAcls": true,
              "BlockPublicPolicy": true,
              "IgnorePublicAcls": true,
              "RestrictPublicBuckets": true
            }
          }
        }
      },
      "Outputs": {
        "BucketName": {
          "Description": "S3 Bucket Created to Output text file",
          "Value": {
            "Ref": "S3BucketToWriteTo"
          }
        },
        "InterviewLambdaASMRoleArn": {
          "Description": "",
          "Value": {
            "Fn::GetAtt": [
              "InterviewLambdaASMRole",
              "Arn"
            ]
          }
        }
      }
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/asm/repos/INTERVIEW/interview/.serverless/helloWorld.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/helloWorld/stage/1583410454886-2020-03-05T12:14:14.886Z",
    "artifact": "helloWorld.zip"
  }
}